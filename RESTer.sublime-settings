{
    // Do not include headers when writing the response to a new buffer.
    "body_only": false,

    // Path to the curl command. If curl is on you path, you should not need to
    // change this. Windows users will need to use forward slashes in the path.
    //
    // Only meaningful when http_client is "curl"
    "curl_command": "curl",

    // Additional options to send to cURL. Each option must be a separate
    // string. For example, to add custom header:
    // curl_options: ["--header", "X-Custom-Header: 1"]
    //
    // Only meaningful when http_client is "curl"
    "curl_options": [],

    // Default headers to add for each request.
    "default_headers": {
        "Accept-Encoding": "gzip, deflate",
        "Cache-control": "no-cache"
    },

    // List of encodings to try if not discernable from the response.
    "default_response_encodings": ["utf-8", "ISO-8859-1", "ascii"],

    // Automatically make a GET (or HEAD) request to the URI in the Location
    // header upon receiveing a response with a redirect status code listed
    // in follow_redirect_status_codes.
    "follow_redirects": true,

    // When follow_redirects is true, follow any response with one of these
    // status codes.
    "follow_redirect_status_codes": [300, 301, 302, 303, 307],

    // When contructing form fields using the auto_form_encode command, RESTer
    // will normally strip whitespace from field values and parse only single-
    // line field values. To include a multiline value or to preserve the
    // whitespace of a value, wrap the value in these delimiteres:
    "form_field_start": "\"\"\"",
    "form_field_end": "\"\"\"",

    // RESTer includes two clients to use to perform requests. The native
    // Python client is the default, however some Linux users will not be
    // able to make HTTPS requests if Python was compiled without SSL.
    //
    // If you have cURL installed, you may want to set this to "curl". See
    // also the options "curl_command" and "curl_options".
    //
    // Allowed values: "python", "curl"
    "http_client": "python",

    // Output the request to the console.
    "output_request": true,

    // Output the response headers to the console.
    "output_response_headers": true,

    // Output the response body to the console.
    "output_response_body": true,

    // Port to use when not listed in the request line.
    // Do not set unless you need something other than 80 (http) or 443 (https)
    "port": null,

    // Protocol to use when not listed in the request line.
    // Allowed values are "http" and "https"
    "protocol": "http",

    // List of commands to run on the request.
    // These commands will be undone after the request is issued.
    //
    // Each request or response command must be a string (the name of the
    // command), or an object with a "name" member (the name of the command)
    // and optionally an "args" member as an object of arguments to pass to the
    // command.
    //
    // Example:
    //     {
    //         "name": "merge_variables",
    //         "args": {
    //             "active_sets": ["mysite", "mysite-dev"]
    //          }
    //     }
    //
    "request_commands": [
        "auto_form_encode",
        "merge_variables"
    ],

    // If true, return focus to the request view.
    // If false, keep focus on the new response view.
    "request_focus": false,

    // Create a new buffer for the response.
    "response_buffer": true,

    // Commands to run on the body of the response.
    "response_commands": ["pretty_json"],

    // Open the response in a specific group. If no group at that index exists,
    // RESTer will create the group.
    //
    // Use null to open the response in the same group as the request.
    //
    // For two-column, side-by-side mode, set to 1. (0 is the request group.)
    // These settings work well for a standard two-column mode:
    //
    // "response_group": 1,
    // "response_group_clean": true,
    // "request_focus": true
    //
    "response_group": null,

    // Set to true to close all other views in the response group when
    // displaying the response.
    //
    // Only use this if you are working if "response_group" is set.
    "response_group_clean": false,

    // Prevent response views from reporting a dirty state allowing them
    // to be closed without a save prompt.
    "response_scratch": true,

    // Timeout after this number of seconds.
    "timeout": 15
}
